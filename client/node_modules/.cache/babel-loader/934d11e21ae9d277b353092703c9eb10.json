{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\personal\\\\crown-clothing\\\\src\\\\pages\\\\collection\\\\collection.component.jsx\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from \"./collection.styles\";\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log(\"I am subscribing\");\n    firestore.collection(\"collections\").onSnapshot(async snapshot => console.log(snapshot));\n    return () => {};\n  });\n  const {\n    title,\n    items\n  } = collection;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nconst matStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(matStateToProps)(CollectionPage);","map":{"version":3,"sources":["C:/projects/personal/crown-clothing/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","CollectionItem","selectCollection","firestore","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","CollectionPage","collection","console","log","onSnapshot","snapshot","title","items","map","item","id","matStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;;AAMA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAP,IAAAA,SAAS,CACNK,UADH,CACc,aADd,EAEGG,UAFH,CAEc,MAAOC,QAAP,IAAoBH,OAAO,CAACC,GAAR,CAAYE,QAAZ,CAFlC;AAGA,WAAO,MAAM,CAAE,CAAf;AACD,GANQ,CAAT;AAOA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBN,UAAzB;AACA,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBK,KAAlB,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAWC,IAAD,IACT,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CAnBD;;AAqBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5CZ,EAAAA,UAAU,EAAEN,gBAAgB,CAACkB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAenB,OAAO,CAACkB,eAAD,CAAP,CAAyBX,cAAzB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\r\n\r\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\r\n\r\nimport { firestore } from \"../../firebase/firebase.utils\";\r\n\r\nimport {\r\n  CollectionPageContainer,\r\n  CollectionTitle,\r\n  CollectionItemsContainer,\r\n} from \"./collection.styles\";\r\n\r\nconst CollectionPage = ({ collection }) => {\r\n  useEffect(() => {\r\n    console.log(\"I am subscribing\");\r\n    firestore\r\n      .collection(\"collections\")\r\n      .onSnapshot(async (snapshot) => console.log(snapshot));\r\n    return () => {};\r\n  });\r\n  const { title, items } = collection;\r\n  return (\r\n    <CollectionPageContainer>\r\n      <CollectionTitle>{title}</CollectionTitle>\r\n      <CollectionItemsContainer>\r\n        {items.map((item) => (\r\n          <CollectionItem key={item.id} item={item} />\r\n        ))}\r\n      </CollectionItemsContainer>\r\n    </CollectionPageContainer>\r\n  );\r\n};\r\n\r\nconst matStateToProps = (state, ownProps) => ({\r\n  collection: selectCollection(ownProps.match.params.collectionId)(state),\r\n});\r\n\r\nexport default connect(matStateToProps)(CollectionPage);\r\n"]},"metadata":{},"sourceType":"module"}